name: pull-request
on: pull_request
jobs:
  shellcheck:
    name: Shellcheck
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Run ShellCheck
      uses: ludeeus/action-shellcheck@2.0.0
      with:
        scandir: "./dist"

  install:
    name: Install & Test
    strategy:
      matrix:
        os: [ "ubuntu", "macos" ]
    runs-on: ${{matrix.os}}-latest
    steps:
    - uses: actions/checkout@v3
    - name: Run install script
      run: |
        ./dist/install.sh --silent
    - name: Check installed content
      run: |
        test -d ~/.pulumi
        test -d ~/.pulumi/bin
        cd ~/.pulumi/bin
        exit_code=0
        echo "Checking expected files are nonzero, readable, and executable"
        for f in \
          "pulumi" \
          "nonexistent" \
          "pulumi-analyzer-policy" \
          "pulumi-analyzer-policy-python" \
          "pulumi-language-dotnet" \
          "pulumi-language-go" \
          "pulumi-language-nodejs" \
          "pulumi-language-python" \
          "pulumi-language-python-exec" \
          "pulumi-language-yaml" \
          "pulumi-resource-pulumi-nodejs" \
          "pulumi-resource-pulumi-python" \
          "pulumi-watch"; do
          if test -s "$f" -a -r "$f" -a ! -x "$f"; then
            echo "OK: $f"
          else 
            echo "FAIL: $f"
            echo "  ls -al: $(ls -al $f)"
            echo 
            exit_code=1
          fi
        done
        exit $exit_code

  preview:
    name: Preview
    runs-on: ubuntu-latest
    env:
      AWS_ROLE_TO_ASSUME: ${{ secrets.AWS_ROLE_TO_ASSUME_STAGING }}
    steps:
    - if: github.base_ref == 'production'
      run: |
          echo "AWS_ROLE_TO_ASSUME=${{ secrets.AWS_ROLE_TO_ASSUME_PRODUCTION }}" >> $GITHUB_ENV
    - uses: actions/checkout@v3
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.CI_AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.CI_AWS_SECRET_ACCESS_KEY }}
        aws-region: us-west-2
        role-to-assume: ${{ env.AWS_ROLE_TO_ASSUME }}
        role-external-id: ${{ env.PULUMI_STACK_NAME }}
        role-duration-seconds: 3600
        role-session-name: get.pulumi.com-${{ github.run_id }}
    - run: yarn install
      working-directory: infrastructure
    - if: github.base_ref == 'production'
      uses: pulumi/actions@v4
      with:
        command: preview
        work-dir: infrastructure
        stack-name: "pulumi/get-pulumi-com/production"
      env:
          PULUMI_ACCESS_TOKEN: ${{ secrets.PULUMI_ACCESS_TOKEN }}
    - if: github.base_ref == 'master'
      uses: pulumi/actions@v4
      with:
        command: preview
        work-dir: infrastructure
        stack-name: "pulumi/get-pulumi-com/staging"
      env:
        PULUMI_ACCESS_TOKEN: ${{ secrets.PULUMI_ACCESS_TOKEN }}
